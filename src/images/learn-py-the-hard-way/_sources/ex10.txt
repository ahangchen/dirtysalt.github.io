习题 10: 那是什么？
***************************

在习题 9 中我你接触了一些新东西。我让你看到两种让字符串扩展到多行的\
方法。第一种方法是在月份之间用 ``\n`` (back-slash ``n`` )隔开。这两个字符的作用是\
在该位置上放入一个“新行(new line)”字符。

使用反斜杠 ``\`` (back-slash) 可以将难打印出来的字符放到字符串。针对不同的符号\
有很多这样的所谓“转义序列(escape sequences)”，但有一个特殊的转义序列，就是 ``双反斜杠(double back-slash)`` 
``\\`` 。这两个字符组合会打印出一个反斜杠来。接下来我们做几个练习，然后你就知道这些转义序列的意义了。 

另外一种重要的转义序列是用来将单引号 ``'`` 和双引号 ``"`` 转义。想象你有一个用\
双引号引用起来的字符串，你想要在字符串的内容里再添加一组双引号进去，比如你想说\
``"I "understand" joe."``\，Python 就会认为 ``"understand"`` 前后的两个引号是字符串\
的边界，从而把字符串弄错。你需要一种方法告诉 python 字符串里边的双引号不是真正\ 
的双引号。

要解决这个问题，你需要将双引号和单引号转义，让 Python 将引号也包含到字符串里边去。这里\
有一个例子：

.. code-block:: python

    "I am 6'2\" tall."  # 将字符串中的双引号转义
    'I am 6\'2" tall.'  # 将字符串种的单引号转义

第二种方法是使用“三引号(triple-quotes)”，也就是 ``"""``\，你可以在一组三引号之间放入\
任意多行的文字。接下来你将看到用法。



.. literalinclude:: ex/ex10.py
    :linenos:


你应该看到的结果
===================

注意你打印出来的制表符，这节练习中的文字间隔对于答案的正确性是很重要的。

.. literalinclude:: ex/ex10.txt
    :language: console


加分习题
============

1. 上网搜索一下还有哪些可用的转义字符。
2. 使用 ``'''`` (三个单引号)取代三个双引号，看看效果是不是一样的？
3. 将转义序列和格式化字符串放到一起，创建一种更复杂的格式。
4. 记得 ``%r`` 格式化字符串吗？使用 ``%r`` 搭配单引号和双引号转义字符打印一些字符串出来。
   将 %r 和 %s 比较一下。 
   注意到了吗？%r 打印出来的是你写在脚本里的内容，而 %s 打印的是你应该看到的内容。

