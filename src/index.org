#+title: dirtysalt's homepage

** Operating System
- [[file:computer-system-reading.org][Computer System Reading]] 单机系统方面的一些文章
  - [[file:./the-secret-to-10-million-concurrent-connections.org][The Secret To 10 Million Concurrent Connections -The Kernel Is The Problem, Not The Solution]]
  - [[file:./a-tour-inside-cloudflare-latest-generation-servers.org][A Tour Inside CloudFlare's Latest Generation Servers]]
  - [[file:./busting-4-modern-hardware-myths-are-memory-hdds-and-ssds-really-random-access.org][Busting 4 Modern Hardware Myths - Are Memory, HDDs, And SSDs Really Random Access?]]
  - [[file:how-long-does-it-take-to-make-context-switch.org][How long does it take to make a context switch?]]
  - [[http://c10m.robertgraham.com/p/manifesto.html][The C10M Problem]]
  - [[file:./how-to-receive-a-million-packets-per-second.org][How to receive a million packets per second]]
  - [[file:./yahoo-and-freebsd.org][Yahoo! and FreeBSD]]
  - [[https://www.kernel.org/pub/linux/kernel/people/paulmck/perfbook/perfbook.html][Is Parallel Programming Hard, And, If So, What Can You Do About It?]]
  - [[file:linux-kernel-development.org][Linux Kernel Development]] by Robert Love
  - [[file:./earlybird-realtime-search-at-twitter.org][Earlybird: Real-Time Search at Twitter]] twitter实时检索系统
- [[http://pages.cs.wisc.edu/~remzi/OSTEP/][Operating Systems: Three Easy Pieces]] 一门非常好的操作系统课程
- [[http://www.amazon.com/UNIX-Systems-Modern-Architectures-Multiprocessing/dp/0201633388][现代体系结构上的UNIX系统]] [[http://book.douban.com/subject/1229889/][(内核程序员的SMP和Caching技术)]]
- [[file:cpu.org][CPU]] / [[file:simd.org][SIMD]] SIMD(Single Instruction Muitple Data)单指令多数据。这个笔记是 [[http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html][Intel Reference Manual]] 中关于SIMD指令的总结, 里面包含了一些理解SIMD指令需要的知识, 以及对SIMD指令进行了分类, 但是没有太多实用例子.
- [[file:apue.org][APUE]] Unix环境高级编程(Advanced Programming Unix Environment),W. Richard Stevens的神作。笔记里面没有包含书最后的几个部分，比如终端，打印机等，因为我觉得可能大家都不太需要这个东西了。我还尝试将一些跨章节的概念整合到一起，这样比较容易从总体把握Unix编程环境。
- [[file:linux.org][linux]] 将原来[[file:apue.org][APUE]] 和 [[file:unp.org][UNP]] 中的一部分内容放在这里面来了，这样可以保持这两篇内容比较稳定。
  - [[file:pic.org][pic-code]] 分析了一下PIC位置无关代码内部的原理以及和动态库之间的关系。通过阅读<深入理解计算机系统>并且结合实际的例子总结出来的。
  - [[file:gcc-asm.org][gcc-assembly]] 如何编写GCC内嵌汇编，以及一些关于GCC内嵌汇编的文章，主要是参考了<GCC Manual>. 但是自己对这个依然不是很了解。
  - [[file:encoding.org][encoding]] 介绍了GB2312/GBK/GB18030/Unicode/UTF16/UTF32/UTF8这几种字符编码格式。还是觉得UTF8在设计以及实现上都相对更加合理。
  - [[file:linux-proc.org][linux /proc]] /proc文件系统
  - [[file:linux-tools.org][linux-tools]] Linux系统下的一些常用工具. see [[file:images/unixtoolbox-zh-cn.xhtml][unix-toolbox]]
- [[file:memory.org][memory]] 内存相关
  - [[file:./numa.org][NUMA]] Non-Uniform Memory Access. 非一致性内存访问
  - [[file:numa-an-overview.org][NUMA An Overview]] 关于NUMA的介绍性文章
  - [[file:memory-barrier.org][memory-barrier]] 内存屏障
  - [[http://lwn.net/Articles/250967/][What every programmer should know about memory]] by Ulrich Drepper([[https://sourceware.org/bugzilla/show_bug.cgi?id=4980][fun]]).
  - [[file:tcmalloc.org][tcmalloc]] Google的开源线程缓存内存分配器，解决多线程下面内存分配效率问题。
  - [[file:sanitizer.org][sanitizer]] Google的C++动态分析工具，可以检测内存泄漏，内存无效使用以及多线程数据竞争.
- [[file:sysperf.org][system-performance]] 系统性能相关
  - [[file:perf.org][perf]] / [[file:oprofile.org][oprofile]] ([[file:./oprofile-obsolete.org][obsolete version]]) 系统级别profiler.
  - [[file:systemtap.org][systemtap]] 通过将探测(probe)语句编译成为内核驱动来观察系统运行情况.
  - [[file:gperftools.org][gperftools]] Google的应用级别性能分析工具，包含 [[file:tcmalloc.org][tcmalloc]].
  - [[file:./optimizing-software-in-cpp.org][Optimizing software in C++]]
  - [[file:./tips-for-optimizing-c-cpp-code.org][Tips for Optimizing C/C++ Code]]
  - [[file:./linux-system-and-performance-monitoring.org][Linux System and Performance Monitoring]]
  - [[http://www.brendangregg.com/linuxperf.html][Linux Performance Tools]] by Brendan Gregg.
  - [[file:./thinking-clearly-about-performance.org][Thinking Clearly about Performance]] by Cary Millsap.
- [[file:concurrency.org][concurrency]] / [[file:coroutine.org][coroutine]] / [[file:lock.org][lock]] / [[file:continuation.org][continuation]]
  - [[file:./concurrency-hazards.org][Concurrency Hazards: Solving 11 Likely Problems In Your Multithreaded Code]]
  - [[file:./images/single-multi-thread-event-driven.jpg][One picture explain Single-Thread, Multiple-Thread, Event-Driven]]
- [[file:ubuntu.org][ubuntu]] 如何更好地使用Ubuntu. [[file:./blogs/struggle-with-ubuntu.org][之前有过痛苦的经历]] . 主要记录自己使用出现的问题.
- [[file:mac.org][macosx]] 如何更好地使用Mac. 以前使用Windows，后来转向Ubuntu，再后来买了个MBA.
- [[file:docker.org][docker]] 基于lxc(linux container)的分发应用工具和平台.
- [[file:vagrant.org][vagrant]] 用来构件虚拟开发环境的工具，底层可以使用多种虚拟化技术(现在支持相对比较好的是VirtualBox)
- [[file:./sphinx-search.org][sphinx]] C++实现的全文检索引擎，可以很容易地替换掉MySQL内置的全文检索(FTS)实现
- [[file:./graphite.org][graphite]] 和 [[file:./opentsdb.org][OpenTSDB]] 类似, 时间序列(time series)数据库, 但是主要用于监控.
- [[file:git.org][git]] 分布式版本控制系统. 最开始用于管理linux kernel, 现在许多开源软件托管在github上使用git管理.
- [[file:elastic-search.org][Elasticsearch]] 支持分布式的搜索引擎. 性能良好，开箱即用，社区活跃.
- [[file:./ffmpeg.org][ffmpeg]] 视频/音频处理的瑞士军刀.

** Network Programming
- [[file:unp.org][UNP]] Unix网络编程(Unix Network Programming),W. Richard Stevens的又一神作。笔记里面只是对于TCP原理有比较详细讨论，这部分笔记也包含了TCP Illustrated v1里面和TCP相关的章节内容。对于编程方面也着重TCP socket使用，毕竟在大部分应用场景下面我们选用TCP模型更多，并且TCP里面有很多非常琐碎的知识。
- [[https://github.com/dirtysalt/tomb/tree/master/cc/itachi][itachi]] 自己两天时间写完的异步网络编程框架，当然有很多地方需要改进，但是内核基本稳定了。并且在上面做了asocket封装，编写网络程序非常方便。
- [[file:./libev.org][libev]] 开源的事件触发器。被认为是更高效的libevent. [[https://github.com/dirtysalt/itachi][itachi]] 这个项目开始想自己编写事件触发器，但是发现工作比较琐碎枯燥，所以底层还是选择使用libev.
- [[file:hpserver.org][hpserver]] 开源的网络编程框架。可以当做一个入门级的网络编程框架阅读。这个是我最开始阅读的网络编程框架(1st).
- [[file:nmstl.org][nmstl]] 开源的网络编程框架。一个很早期的作品，代码十分简洁。主要是内部实现了SEDA的思想。这个是我第二个阅读的网络编程框架(2nd).
- [[file:muduo.org][muduo]] 开源的网络编程框架。作者理想中的网络编程框架实现，里面有很多mina/netty的影子。这个是我三个阅读的网络编程框架(3rd).
- [[file:kylin.org][kylin]] Baidu in-house的异步编程框架，是[[http://weibo.com/linshiding][linsd(百度首席架构师林仕鼎)]]的神作，通过阅读这个框架的代码让我理解了异步编程模型。这个是我第四个阅读的网络编程框架(4th).
- [[file:zeromq.org][zeromq]] 开源的消息传输系统。颠覆我们思考和编写网络通信程序的方式。
- [[file:ace.org][ACE]] 开源的网络编程框架。非常重量级，也被人诟病为学术产物而不是适合生产实践。
- [[file:netty.org][netty]] an asynchronous event-driven network application framework in *Java* based on Java NIO.
- [[file:nginx.org][nginx]] an open source reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer, HTTP cache, and a web server (origin server). (简直就是webserver里面的要你命3000啊!)
- [[file:./inside-nginx-how-we-designed-for-performance-scale.org][深入NGINX：我们如何设计它的性能和扩展性]]
- [[file:finagle.org][finagle]] an extensible RPC system for the JVM, used to construct high-concurrency servers.
- [[file:./haproxy.org][HAProxy]] 高性能的负载均衡器，可以提供4（TCP），7（HTTP）层反向代理。
- [[file:./gunicorn.org][gunicorn]] Python WSGI HTTP Server. green unicorn(Ruby实现)

** Storage System
- [[file:storage-system-reading.org][Storage System Reading]] 存储系统方面的一些文章
  - [[file:backblaze-storage-pod.org][Backblaze Storage Pod]] 构建廉价存储服务器的厂商。将其设计以及使用公开并且做了比较深入的说明。
  - [[file:./nosql-back-to-the-feature-or-yet-another-db-feature.org][NoSQL - Back to the Future or Yet Another DB Feature]] @2012
- [[file:ssd.org][SSD]] solid state disk. 固态硬盘
  - [[file:./solid-state-revolution-in-depth-on-how-ssd-really-work.org][Solid-state revolution: in-depth on how SSDs really work]] ssd发展演变，内部构造和工作方式
  - [[file:./ssd-gc-and-trim.org][固态硬盘技术解析之垃圾回收和TRIM指令]]
  - [[file:coding-for-ssd.org][Coding for SSDs]] 为ssd设计系统的要点（和ssd底层原理）
  - [[file:./ssd-and-distributed-data-systems.org][SSDs and Distributed Data Systems]] ssd对于设计分布式数据系统的影响
- [[file:raid.org][RAID]] Redundant Array of Inexpensive Disk. 廉价磁盘冗余阵列
  - [[file:./the-skinny-on-raid.org][The skinny on RAID]] 一篇关于RAID的介绍性文章
- DBMS (database management system) [[file:./dbms-intro.org][Intro]] & [[file:./dbms-impl.org][Impl]]
- [[file:gizzard.org][gizzard]] a library for creating distributed datastores 可以认为是数据库中间层，完成partition/replication，也做fault-tolerant migration. (NOTE: obsolete. don't use it.)
- [[file:leveldb.org][leveldb]] Google的开源kv存储系统。支持billion级别的数据量，适合于写少读多的情况。当时阅读的时候是从github上面clone下来的，可能还存相当多的bug.
- [[file:mongodb.org][mongodb]] 面向文档的分布式存储系统，但是却可以针对文档字段索引来加快查询。功能上比通常我们认为的NoSQL强但是弱于RDBMS.
- [[file:redis.org][redis]] 内存存储系统，支持丰富的数据类型以及相应的计算(支持持久化)。外围包装网络访问接口(并且提供了丰富的客户端),可以比较方便地在分布式系统内或者是环境下面使用.
- [[file:mysql.org][mysql]] 开源关系型数据库。The world's most popular open source database.
- [[file:galera.org][galera]] 基于MySQL的同步多主备份集群(synchronous multi-master replication cluster).
- [[file:memcached.org][memcached]] an in-memory key-value store for small chunks of arbitrary data (strings, objects) 可以用来搭建分布式缓存服务，没有持久化存储。
- [[file:rocksdb.org][rocksdb]] A persistent key-value store for fast storage environments. 基于 [[file:leveldb.org][leveldb]] 构建
- [[file:rcfile.org][rcfile]] / [[file:orcfile.org][orcfile]] / [[file:parquet.org][parquet]] 几种列式存储(columnar storage)实现

** Algorithm / ML / Compression
=Algorithm=
- [[file:general-algorithm.org][General Algorithm]] 一些通用算法
- [[file:./cracking-the-coding-interview.org][Cracking The Coding Interview]] 据说算法分为三种：面试算法，ACM算法，算法=D
- [[file:./do-you-think-you-have-gambling-problem.org][Do You Think You Have a Gambling Problem?]] 赌博其实是概率问题
- [[file:./probabilistic-data-structures-for-web-analytics-and-data-mining.org][Probabilistic Data Structures for Web Analytics and Data Mining]] 用于Web分析和数据挖掘的概率化数据结构
- [[file:computational-advertising.org][Computational Advertising]] 计算广告
- [[file:./bitcoin.org][Bitcoin: A Peer-to-Peer Electronic Cash System]] 比特币论文
- [[https://github.com/dirtysalt/tomb/tree/master/leetcode][My leetcode's code]]

=ML=
- [[file:ml-reading.org][Machine Learning Reading]] 机器学习方面的一些文章
  - [[file:./ml-the-hard-way.org][Machine Learning the Hard Way]] 哥们用ml来赌马，虽然最后赚钱了，但是结果却特别悲惨:)
  - [[file:./deconstructing-recommender-systems.org][Deconstructing Recommender Systems]] 关于推荐系统的介绍性文章
- [[file:./sklearn.org][sklearn]] python scikit learn. 机器学习包.
- [[file:caffe.org][caffe]] C++实现的深度学习框架，有python和matlab的扩展接口
- [[file:nolearn.org][nolearn]] scikit-learn compatibile wrapper for neural nets. 底层可以使用不同的NN实现比如 [[file:./caffe.org][caffe]], [[https://github.com/Lasagne/Lasagne][lasagne]].
- [[file:./beauty-of-math.org][数学之美]] wujun
- [[file:./ml-foundations.org][机器学习基石 on Coursera]]
- [[file:./ml-techniques.org][机器学习技法 on Coursera]]
- [[file:./neuralnets.org][Neural Networks for Machine Learning on Coursera]]
- [[file:./mmds.org][Mining Massive Datasets on Coursera]]
- [[http://www.autonlab.org/tutorials/list.html][Statistical Data Mining Tutorials]] by [[http://www.cs.cmu.edu/~awm/][Andrew W. Moore]]
- Coursera: Machine Learning by Andrew Ng. [[file:ml-class.org][笔记和一些习题代码]] (仅供学习) 以及 [[file:images/coursera-ml-2014.pdf][证书]]
- [[https://github.com/dirtysalt/tomb/tree/master/kaggle][My kaggle's code]]

=Compression=
- [[file:snappy.org][snappy]] Google的开源压缩解压库。在满足一定压缩比率的条件下着重提升压缩和解压速度。
- [[file:lzf.org][lzf]] [[file:redis.org][redis]] 使用的开源压缩解压库。轻量(两个文件)可以很容易地独立纳入项目。
- [[file:lzma.org][lzma]] Lempel-Ziv-Markov chain-Algorithm ，压缩速度相对较慢但是压缩比超高。
- zopfli https://github.com/google/zopfli/
- brotli https://github.com/google/brotli/
- zstd https://github.com/facebook/zstd

** Distributed System
*notes*
- [[file:akka-doc.org][Akka Doc]] Akka文档阅读笔记
- [[file:storm.org][Storm]] Twitter的流式处理系统
- [[file:./samza.org][Samza]] LinkedIn的流式处理系统
- [[file:hadoop.org][Hadoop]] Apache的分布式系统基础架构总称
  - [[file:hadoop-overview.org][Hadoop Overview]] @ 2012
  - [[file:./hadoop-benchmark.org][Hadoop Benchmark]]
  - [[file:hadoop-definitive-guide.org][Hadoop权威指南(笔记)]]
- [[file:hdfs.org][HDFS]] Apache Hadoop项目的 [[file:gfs.org][GFS]] 开源实现
- [[file:hbase.org][HBase]] Apache Hadoop项目的 [[file:bigtable.org][BigTable]] 开源实现
  - [[file:./hbase-definitive-guide.org][HBase权威指南(笔记)]]
  - [[file:hbase-configuration.org][Apache HBase Configuration]]
- [[file:mapred.org][MapReduce]] Apache Hadoop项目的 [[file:mapreduce.org][MapReduce]] 开源实现
- [[file:./azkaban.org][Azkaban]] Linkedin的工作流系统，比 [[file:./oozie.org][Oozie]] 好用太多.
- [[file:opentsdb.org][OpenTSDB]] 在 [[file:hbase.org][HBase]] 上构建的时间序列(time series)数据库
- [[file:impala.org][Impala]] Cloudera的 [[file:dremel.org][Dremel]] 开源实现
- [[file:./presto.org][Presto]] Facebook的 [[file:./dremel.org][Dremel]] 开源实现
- [[file:./spark.org][Spark]] AMPLab的分布式计算系统
- [[file:./paxos.org][Paxos]] / [[file:./raft.org][Raft]] 分布式一致性算法

*articles*
- [[file:distributed-system-reading.org][Distributed System Reading]] 分布式系统方面的一些文章
- [[file:./you-can-not-sacrifice-partition-tolerance.org][You Can't Sacrifice Partition Tolerance]]
- [[file:the-anatomy-of-the-google-architecture.org][The Anatomy Of The Google Architecture]] @2009 Google架构的深入解析，属于非官方文档，是一个非Google的友人收集各种资料汇集起来的
- [[file:./building-scalable-highly-concurrent-and-fault-tolerant-systems.org][Building Scalable, Highly Concurrent & Fault-Tolerant Systems: Lessons Learned]]
- [[file:./data-structures-and-algorithms-for-big-databases.org][Data Structures and Algorithms for Big Databases]]
- [[file:./building-software-systems-at-google-and-lessons-learned.org][Building Software Systems at Google and Lessons Learned]] @Stanford-2010 Jeff Dean
- [[file:./web-search-for-a-planet.org][Web Search for a Planet]] @2003 Google Web Search
- [[file:./case-study-gfs-evolution-on-fast-forward.org][Case Study GFS: Evolution on Fast-forward]] @2009 GFS1
- [[file:./how-to-beat-the-cap-theorem.org][How to beat the CAP theorem]]
- [[file:./google-cluster-computing-faculty-traning-workshop.org][Google Cluster Computing Faculty Training Workshop]]
- [[file:./mapreduce-a-major-step-backwards.org][MapReduce: A major step backwards]] PDBMS阵营对MR阵营的批评
- [[file:./mapreduce-a-major-step-backwards-ii.org][MapReduce: A major step backwards-ii]] PDBMS阵营对MR阵营的第二轮批评
- [[file:./a-comparison-of-approaches-to-large-scale-data-analysis.org][A Comparison of Approaches to Large-Scale Data Analysis]]
- [[file:./mapreduce-a-flexible-data-processing-tool.org][MapReduce: A Flexible Data Processing Tool]] MR阵营对PDBMS阵营的回应
- [[file:mapreduce-and-parellel-dbms-friends-or-foes.org][MapReduce and Parallel DBMSs: Friends or Foes?]] PDBMS阵营和MR阵营达成和解
- [[file:./mapreduce-versus-parellel-dbms.org][MapReduce Versus Parallel DBMS]]
- [[file:./distributed-algorithms-in-nosql-databases.org][Distributed Algorithms in NoSQL Databases]]
- [[file:./mapreduce-a-minor-step-forward.org][MapReduce: A Minor Step Forward]] James Hamilton对PDBMS和MR的看法
- [[file:./large-scale-data-and-computation-chanllenges-and-opportunities.org][Large-Scale Data and Computation: Challenges and Opportunities]] @Stanford-2013 Jeff Dean
- [[file:./designs-lessons-and-advice-from-building-large-distributed-systems.org][Designs, Lessons and Advice from Building Large Distributed Systems]] @LADIS-2009 Jeff Dean
- [[file:./tail-at-scale.org][The Tail at Scale]] @2013 CACM Jeff Dean
- [[file:./realtime-big-data-analytics-emerging-architecture.org][Real-Time Big Data Analytics: Emerging Architecture]]
- [[file:./unveil-google-app-engine.org][探索Google App Engine背后的奥秘]]
- [[file:./beating-the-cap-theorem-checklist.org][Beating the CAP Theorem Checklist]] "遇到声称能突破CAP原理的民科的时候，用这个checklist来对付他" via @delphij
- [[file:./in-stream-big-data-processing.org][In-Stream Big Data Processing]] 流式处理系统一些需要解决的问题以及方法
- [[file:./lessons-learned-while-building-infrastructure-software-at-google.org][Lessons Learned While Building Infrastructure Software at Google]] @XLDB-2013 Jeff Dean
- [[file:./a-word-on-scalability.org][A Word on Scalability]]
- [[file:./application-resilience-in-a-service-oriented-architecture.org][Application Resilience in a Service-oriented Architecture]]
- [[file:./building-data-science-teams.org][Building Data Science Teams]]
- [[file:./on-designing-and-deploying-internet-scale-services.org][On Designing and Deploying Internet-Scale Services]] @2007
- [[file:./analysis-of-hdfs-under-hbase-a-facebook-messages-case-study.org][Analysis of HDFS Under HBase: A Facebook Messages Case Study]] @2014
- [[file:./the-log-what-every-software-engineer-should-know-about-real-time-datas-unifying-abstraction.org][The Log: What every software engineer should know about real-time data's unifying abstraction]]
- [[file:./hadoop-at-a-crossroads.org][Hadoop at a Crossroads?]] by Michael Stonebraker
- [[file:a-typical-data-processing-system.org][A Typical Data Processing System]] by me:) 一个典型的数据处理系统
- [[file:what-does-big-data-mean.org][What Does 'Big Data' Mean?]] by Michael Stonebraker
- [[file:./possible-hadoop-trajectories.org][Possible Hadoop Trajectories]] by Michael Stonebraker
- [[file:./notes-on-distributed-systems-for-young-bloods.org][Notes on Distributed Systems for Young Bloods]] 写给分布式系统新手的笔记
- [[file:./bringing-spark-closer-to-bare-metal.org][Project Tungsten: Bringing Spark Closer to Bare Metal]] 优化Spark性能的一篇文章
- [[file:./lessons-learned-while-working-on-large-scale-server-softwarre.org][Lessons Learned while Working on Large-Scale Server Software]]
- [[file:./questioning-the-lambda-architecture.org][Questioning the Lambda Architecture]] @2014
- [[file:./service-disoriented-architecture.org][Service-Disoriented Architecture]] 对SOA(和microservices)的反思
- [[file:./building-a-production-machine-learning-infrastructure.org][Building a Production Machine Learning Infrastructure]] 构建用于生产的ML基础架构（如何平衡算法和工程）
- [[file:./scaling-lessons-learned-at-dropbox.org][Scaling lessons learned at Dropbox]]
- [[file:./microservices-not-a-free-lunch.org][Microservices - Not A Free Lunch!]]
- [[file:./what-it-takes-to-run-stack-overflow.org][What it takes to run Stack Overflow]] @2013.11
- [[file:mesos-omega-borg-a-survey.org][mesos, omega, borg: a survey]] @2015
- [[file:./what-does-it-take-to-make-google-work-at-scale.org][What does it take to make Google work at scale?]] @2015
- [[file:./building-a-terabyte-scale-data-cycle-at-linkedin-with-hadoop-and-project-voldemort.org][Building a terabyte-scale data cycle at LinkedIn with Hadoop and Project Voldemort]] @ 2009
- [[file:./project-voldemort-scaling-simple-storage-at-linkedin.org][Project Voldemort: Scaling Simple Storage at LinkedIn]] @ 2009
- [[file:druid-design-doc.org][Druid Design Doc]] Metamarket的大规模数据上的实时OLAP
- [[file:./intro-druid-real-time-analytics-at-a-billion-rows-per-second.org][Introducing Druid: Real-Time Analytics at a Billion Rows Per Second]] @2011
- [[file:./druid-part-deux-three-principles-for-fast-dist-olap.org][Druid, Part Deux: Three Principles for Fast, Distributed OLAP]] @2011
- [[file:corona.org][Under the Hood: Scheduling MapReduce jobs more efficiently with Corona]] @ 2012
- [[file:yarn-intro.org][Introducing Apache Hadoop YARN]] @ 2012
- [[file:manhattan.org][Manhattan, our real-time, multi-tenant distributed database for Twitter scale]] @ 2014
- [[file:./best-practices-for-selecting-apache-hadoop-hardware.org][Best Practices for Selecting Apache Hadoop Hardware]] @2011
- [[file:./the-dark-side-of-hadoop.org][The dark side of Hadoop - BackType Technology]] @2011
- [[file:./apache-hadoop-goes-realtime-at-facebook.org][Apache Hadoop Goes Realtime at Facebook]] @2011
- [[file:is-hadoop-out-of-date.org][Hadoop即将过时了吗？]] @2012
- [[file:hdfs-reliability-with-namenode-and-avatarnode.org][Hadoop Distributed Filesystem reliability with Namenode and Avatarnode]] @2012
- [[file:./ha-namenode-for-hdfs-with-hadoop1.org][HA Namenode for HDFS with Hadoop 1.0]] @2012
- [[file:./hadoop-io-files.org][Hadoop I/O: Sequence, Map, Set, Array, BloomMap Files]] @2011
- [[file:./why-not-raid0-in-hdfs.org][Why not RAID-0? It's about Time and Snowflakes]] @2012
- [[file:./hbase-write-path.org][HBase Write Path]] @ 2012
- [[file:./hbase-log-splitting.org][HBase Log Splitting]] @2012
- [[file:./alibaba-hbase-practice.org][阿里HBase业务设计实践]] @ 2012
- [[file:using-hbase-with-iomemory.org][Using HBase with ioMemory]] by fusion-io
- [[file:./7-tips-for-improving-mapreduce-performance.org][7 Tips for Improving MapReduce Performance]] @2009
- [[file:./mapreduce-patterns-algos-and-use-cases.org][MapReduce Patterns, Algorithms, and Use Cases]] @2012
- [[file:./cloudera-impala-real-time-queries-in-apache-hadoop-for-real.org][Cloudera Impala: Real-Time Queries in Apache Hadoop, For Real]] @2012
- [[file:streambase.org][A Glance on StreamBase]] 之前调研过的商用流式处理系统
- 201604 [[file:./blogs/data-infra-at-airbnb.org][Data Infrastructure at Airbnb]]
- 201606 [[file:./blogs/anaconda-high-perf-solution.org][Anacoda High Performance Solution]]
- [[file:./thoughts-on-systems-for-large-datasets.org][Thoughts on Systems for Large Datasets: Problems and Opportunities]] @ 2014 Jeff Dean
- [[file:why-google-stores-billions-of-lines-of-code-in-a-single-repository.org][Why Google Stores Billions of Lines of Code in a Single Repository]] @ 2016

*papers*
- [[file:chubby.org][The Chubby lock service for loosely-coupled distributed systems]] @ 2006
- [[file:gfs.org][The Google File System]] @ 2003
- [[file:mapreduce.org][MapReduce: Simplified Data Processing on Large Clusters]] @ 2004
- [[file:bigtable.org][Bigtable: A Distributed Storage System for Structured Data]] @ 2006
- [[file:kafka.org][Kafka: a Distributed Messaging System for Log Processing]] @ 2012
- [[file:./the-hadoop-distributed-file-system.org][The Hadoop Distributed File System]] @2010
- [[file:./hdfs-reliability.org][HDFS Reliability]] @2008
- [[file:hdfs-scalability-the-limits-to-growth.org][HDFS scalability: the limits to growth]] @2010
- [[file:./mapreduce-online.org][MapReduce Online]] @2010
- [[file:zookeeper.org][ZooKeeper: Wait-free coordination for Internet-scale systems]] @ 2010
- [[file:pig.org][Pig Latin: A Not-So-Foreign Language for Data Processing]] @ 2010
- [[file:dremel.org][Dremel: Interactive Analysis of Web-Scale Datasets]] @ 2010
- [[file:power-drill.org][Processing a Trillion Cells per Mouse Click]] @ 2012
- [[file:pregel.org][Pregel: A System for Large-Scale Graph Processing]] @ 2010
- [[file:percolator.org][Large-scale Incremental Processing Using Distributed Transactions and Notifications]] @ 2010
- [[file:tenzing.org][Tenzing A SQL Implementation On The MapReduce Framework]] @ 2011
- [[file:megastore.org][Megastore: Providing Scalable, Highly Available Storage for Interactive Services]] @ 2011
- [[file:spanner.org][Spanner: Google's Globally-Distributed Database]] @ 2012
- [[file:f1-talk.org][F1: The Fault-Tolerant Distributed RDBMS Supporting Google's Ad Business]] @ 2012
- [[file:./f1.org][F1: A Distributed SQL Database That Scales]] @ 2013
- [[file:dapper.org][Dapper, a Large-Scale Distributed Systems Tracing Infrastructure]] @ 2010
- [[file:gwp.org][Google-Wide Profiling: A Continuous Profiling Infrastructure for Data Centers]] @ 2010
- [[file:dynamo.org][Dynamo: Amazon's Highly Available Key-value Store]] @ 2007
- [[file:cassandra.org][Cassandra - A Decentralized Structured Storage System]] @ 2009
- [[file:./time-clocks-and-ordering-of-events-in-a-distributed-system.org][Time, Clocks, and Ordering of Events in a Distributed System]]
- [[file:omega.org][Omega: flexible, scalable schedulers for large compute clusters]] @ 2013
- [[file:borg.org][Large-scale cluster management at Google with Borg]] @ 2015
- [[file:ceph.org][Ceph: A Scalable, High-Performance Distributed File System]] @ 2006
- [[file:flumejava.org][FlumeJava: Easy, Efficient Data-Parallel Pipelines]] @ 2010
- [[file:photon.org][Photon: Fault-tolerant and Scalable Joining of Continuous Data Streams]] @ 2013
- [[file:haystack.org][Finding a needle in Haystack: Facebook's photo storage]] @ 2010
- [[file:millwheel.org][MillWheel: Fault-Tolerant Stream Processing at Internet Scale]] @ 2013
- [[file:voldemort.org][Serving Large-scale Batch Computed Data with Project Voldemort]] @ 2012
- [[file:mesos.org][Mesos: A Platform for Fine-Grained Resource Sharing in the Data Center]] @ 2010
- [[file:pnuts.org][PNUTS: Yahoo!'s Hosted Data Serving Platform]] @ 2008
- [[file:./spark-paper.org][Spark: Cluster Computing with Working Sets]] @ 2010
- [[file:./spark-rdd-paper.org][Resilient Distributed Datasets: A Fault-Tolerant Abstraction for In-Memory Cluster Computing]] @ 2012
- [[file:./spark-phd-paper.org][An Architecture for Fast and General Data Processing on Large Clusters]]

** Programming Language
- [[file:thoughts-on-prog-lang.org][Thoughts on Prog Lang]]
- [[file:build-system.org][build-system]] 在实现Baidu in-house的构建工具 [[http://wenku.baidu.com/view/19f3d535284ac850ad0242cc.html][Comake2]] 之前做的构建系统调研总结.
- [[file:cpp.org][C/C++]] # C++ (pronounced "cee plus plus") is a statically typed, free-form, multi-paradigm, compiled, general-purpose programming language. It is regarded as an intermediate-level language, as it comprises a combination of both high-level and low-level language features. [[http://en.wikipedia.org/wiki/C%2B%2B][Wikipedia]]
  - [[file:swig.org][swig]] C/C++多语言扩展接口生成器. 使用起来非常方便, 但是本身不太完善, 比较适合用于原型系统.
  - [[file:./guide-to-advanced-programming-in-c.org][Guide to Advanced Programming in C]]
  - [[file:./the-cpp-prog-lang.org][The C++ Programming Language]]
- [[file:scheme.org][Scheme]] # Scheme is a functional programming language and one of the two main dialects of the programming language Lisp. [[http://en.wikipedia.org/wiki/Scheme_%28programming_language%29][Wikipedia]]
  - [[file:./the-little-schemer.org][The Little Schemer]]
  - [[file:./the-seasoned-schemer.org][The Seasoned Schemer]]
  - [[file:sicp.org][SICP = Structure and Interpretation of Computer Programs]]
- [[file:java.org][Java]] # Java is a programming language originally developed by James Gosling at Sun Microsystems (which has since merged into Oracle Corporation) and released in 1995 as a core component of Sun Microsystems' Java platform. The language derives much of its syntax from C and C++ but has a simpler object model and fewer low-level facilities. [[http://en.wikipedia.org/wiki/Java_%28programming_language%29][Wikipedia]]
  - [[file:maven.org][maven]] 针对JVM语言项目的"基于工程对象模型(POM, Project Object Model)"构建系统
  - [[file:./jni.org][JNI]] Java Native Interface
  - [[file:./jvm.org][JVM]] Java Virtual Machine
- [[file:clojure.org][Clojure]] # Clojure (pronounced like "closure") is a recent dialect of the Lisp programming language created by Rich Hickey. It is a functional general-purpose language. Its focus on programming with immutable values and explicit progression-of-time constructs are intended to facilitate the development of more robust programs, particularly multithreaded ones. [[http://en.wikipedia.org/wiki/Clojure][Wikipedia]]
- [[file:python.org][Python]] # Python is a general-purpose, high-level programming language whose design philosophy emphasizes code readability. Its syntax is said to be clear and expressive. Python has a large and comprehensive standard library. [[http://en.wikipedia.org/wiki/Python_(programming_language)][Wikipedia]]
  - [[file:./efficiently-exploiting-multiple-cores-with-python.org][Efficiently Exploiting Multiple Cores with Python]] 如何有效使用多核
  - [[file:./images/the-django-book/index.html][The Django Book]] 不错的Django入门材料
- [[file:go.org][Go]] # Go is a compiled, garbage-collected, concurrent programming language developed by Google Inc. [[http://en.wikipedia.org/wiki/Go_(programming_language)][Wikipedia]]
- [[file:./scala.org][Scala]] # Scala is an object-functional programming and scripting language for general software applications, statically typed, designed to concisely express solutions in an elegant, type-safe and lightweight (low ceremonial) manner. [[http://en.wikipedia.org/wiki/Scala_(programming_language)][Wikipedia]]
  - [[file:./effective-scala.org][Effective Scala]]
  - [[file:./images/coursera-fpps-2013.pdf][Coursera: FP in Scala]]

** Software Design

*articles*
- [[file:t11-on-backpressure.org][T11谈文艺模型(On Backpressure)]]
- [[file:t11-on-architecture.org][T11谈架构]]
- [[file:./suffering-oriented-programming.org][Suffering-oriented programming]]
- [[file:./the-tyranny-of-the-clock.org][The Tyranny of the Clock]]
- [[file:./system-programming-at-twitter.org][Systems Programming at Twitter]]
- [[file:./writing-software-is-like-writing.org][Writing Software is Like ... Writing]]
- [[file:./programmer-dilemma.org][Programmer's dilemma]]
- [[file:./how-to-read-a-paper.org][How to Read a Paper]]
- [[file:./on-working-remotely.org][On Working Remotely]]
- [[file:./your-server-as-a-function.org][Your Server as a Function]]
- [[file:./systems-software-research-is-irrelevant.org][Systems Software Research is Irrelevant]]
- [[file:./applied-philosophy-aka-hacking.org][Applied Philosophy, a.k.a "Hacking"]]
- [[file:linux-kernel-management-style.org][Linux Kernel Management Style]]
- [[file:./blogs/how-did-you-learn-so-much-stuff.org][How did you learn so much stuff about Oracle?]]
- [[file:./a-conversation-with-werner-vogels.org][A Conversation with Werner Vogels]]
- [[file:./an-interview-with-edw.org][An Interview With Edsger W. Dijkstra]]
- [[file:./what-are-the-best-kept-secrets-of-great-programmers.org][What are the best-kept secrets of great programmers?]]
- [[file:./history-of-apache-storm-and-lessons-learned.org][History of Apache Storm and lessons learned]]
- [[file:./images/programmer-career-chart.jpg][程序员技术发展路线]]
- [[file:./vp-eng-vs-cto.org][VP Engineering vs. CTO]]
- [[file:images/netflix-culture.pdf][Netflix Culture: Freedom & Responsibility(自由与责任)]]
- [[file:./10-lessons-learned-from-the-early-days-of-google.org][10 Lessons Learned from the Early Days of Google]] by Matt Cutts
- [[file:./the-anatomy-of-the-perfect-technical-interview-from-a-former-amazon-vp.org][The Anatomy of the Perfect Technical Interview from a Former Amazon VP]] 如何安排面试
- [[file:./ten-career-lessons.org][Ten Career Lessons]]
- [[file:./generalists-and-specialists-thoughts-on-hiring.org][Generalists and specialists: thoughts on hiring]] 全栈 vs. 专家
- [[file:./advice-for-ambitious-19-years-olds.org][Advice for ambitious 19 year olds]] 其实受用于更加广泛的人群
- [[file:./cardinal-sin-of-software-engineering.org][How to Avoid One of the Costliest Mistakes in Software Engineering]] 是否需要重写系统？
- [[file:./good-and-bad-reasons-to-become-an-entrepreneur.org][Good and Bad Reasons to Become an Entrepreneur]]
- [[file:./engineering-management.org][Engineering Management]]
- [[file:./developers-who-can-build-things-from-scratch.org][Developers Who Can Build Things from Scratch]]
- [[file:./lessons-learned-from-reading-postmortems.org][Lessons Learned From Reading Postmortems]]
- [[file:images/the-rise-of-worse-is-better.html][The Rise of "Worse is Better"]]
- [[file:./make-non-obvious-hires.org][Make Non-Obvious Hires]] 如何找到那些潜在的员工
- [[file:./in-house-programmer.org][In-House Programmer]] Joel on Software
- [[http://www.youtube.com/watch?v=0SARbwvhupQ][Google I/O 2009 - The Myth of the Genius Programmer]]
- [[http://www.youtube.com/watch?v=q-7l8cnpI4k][Google I/O 2011: Programming Well with Others: Social Skills for Geeks]]
- [[file:./complexity-is-the-enemy.org][Complexity is the enemy]] 复杂是...敌人
- [[file:./teach-yourself-programming-in-ten-years.org][Teach Yourself Programming in Ten Years]] by Peter Norvig
- [[file:./mean-people-fail.org][Mean People Fail]] by Paul Graham.

*[[file:./blog.org][blogs]]*
- 201710 [[file:./blogs/taking-php-seriously.org][Taking PHP Seriously]]
- 201710 [[file:./blogs/becoming-cto.org][Becoming CTO]]
- 201710 [[file:./blogs/vinod-khosla-talk.org][Vinod Khosla: Failure does not matter. Success matters.]]
- 201710 [[file:./blogs/silicon-valley-etiquette.org][Silicon Valley Etiquette]] 硅谷礼仪
- 201709 [[file:./blogs/a-little-architecture.org][A Little Architecture]]
- 201709 [[file:./blogs/laws-of-performant-software.org][Laws of Performant Software]]
- 201608 [[file:./blogs/the-future-of-programming.org][The Future of Programming]] by Bret Victor
- 201608 [[file:./blogs/what-makes-a-great-software-engineer.org][What Makes A Great Software Engineer?]]
- 201606 [[file:./blogs/top-10-things-that-makes-you-a-good-programmer.org][Top 10 Things that Makes You a Good Programmer]]
- 201606 [[file:./blogs/dont-know-what-to-program.org]["I know how to program, but I don't know what to program"]]
- 201606 [[file:./blogs/how-to-pick-your-battles-on-a-software-team.org][How to Pick Your Battles on a Software Team]]
- 201606 [[file:./blogs/why-mit-stopped-teaching-SICP.org][为什么MIT停止教授SICP]]
- 201606 [[file:./blogs/on-facebook-newsfeed.org][Facebook NewsFeed]]
- 201606 [[file:./blogs/getting-things-done-when-you-are-only-a-grunt.org][Getting Things Done When You're Only a Grunt]] by Joel Spolsky
- 201606 [[file:./blogs/10-lessons-from-10-years-of-aws.org][10 Lessons from 10 Years of Amazon Web Services]]
- 201606 [[file:./blogs/how-gfw-discovers-hidden-circumvention-servers.org][32c3-7196-en-How_the_Great_Firewall_discovers_hidden_circumvention_servers]] GFW如何发现代理服务器
- 201606 [[file:./blogs/anaconda-high-perf-solution.org][Anacoda High Performance Solution]]
- 201605 [[file:./blogs/work-efficiently-in-facebook.org][Facebook公司内部PPT分享:如何高效工作]]
- 201605 [[file:./blogs/on-career-and-management.org][关于工作年限和管理的问题]] by nullgate
- 201604 [[file:./blogs/starters-and-maintainers.org][Starters and Maintainers]]
- 201604 [[file:./blogs/automate-to-save-mental-energy-not-time.org][Automate to save mental energy, not time]]
- 201604 [[file:./blogs/surviving-meetings-while-remote.org][Surviving meetings while remote]]
- 201604 [[file:./blogs/programmers-are-distraction-for-your-startup.org][Programmers are distraction for your startup]]
- 201604 [[file:./blogs/finding-great-developers.org][Finding Great Developers]]
- 201604 [[file:./blogs/why-cant-programmers-program.org][Why Can't Programmers.. Program?]]
- 201604 [[file:./blogs/dont-call-yourself-a-programmer.org][Don't Call Yourself A Programmer]]
- 201604 [[file:./blogs/atlassian-user-onboarding-magic.org][Atlassian $5.5b user onboarding magic]]
- 201512 [[file:./blogs/how-to-launch-a-mac-app-and-become-1-top-paid-app-globally.org][How To Launch a Mac App and Become #1 Top Paid App Globally]]
- 201512 [[file:./blogs/what-would-it-take-to-prove-me-wrong.org][What would it take to prove me wrong?]]
- 201512 [[file:./blogs/a-great-developer-can-come-from-anywhere.org][A great developer can come from anywhere]]
- 201512 [[file:./blogs/employee-equity.org][Employee Equity]]
- 201512 [[file:./blogs/before-you-code-write.org][Before you code, write.]]
- 201512 [[file:./blogs/remove-the-stress-pick-a-deadline.org][Remove the stress, pick a deadline]]
- 201512 [[file:./blogs/the-secret-to-career-success.org][The Secret to Career Success]]
- 201511 [[file:./blogs/why-i-stopped-paying-attention-to-industry-news.org][Why I stopped paying attention to industry news]]
- 201510 [[file:./blogs/learn-stop-using-shiny-new-things-and-love-mysql.org][Learn to stop using shiny new things and love MySQL]]
- 201510 [[file:./blogs/climbing-the-wrong-hill.org][Climbing The Wrong Hill]]
- 201510 [[file:./blogs/lessons-learned-writing-highly-available-code.org][Lessons learned writing highly available code]]
- 201510 [[file:./blogs/dont-base-your-business-on-a-paid-app.org][Don't base your business on a paid app]]
- 201510 [[file:./blogs/some-advice-from-jeff-bezos.org][Some advice from Jeff Bezos]]
- 201510 [[file:./blogs/ten-rules-for-open-source-success.org][Ten Rules for Open Source Success]]
- 201510 [[file:./blogs/competitors-are-not-the-enemy.org][Competitors Are Not The Enemy]]
- 201510 [[file:./blogs/making-money-along-the-way.org][Making money along the way]]
- 201510 [[file:./blogs/chasing-the-shiny-and-new.org][chasing the shiny and new (追逐时髦的技术)]]
- 201510 [[file:./blogs/why-cd-just-keeps-on-giving.org][Why Continuous Deployment just keeps on giving]]
- 201510 [[file:./blogs/how-to-get-a-job-like-mine-aaron-swartz.org][Aaron Swartz: How to Get a Job Like Mine]]
- 201510 [[file:./blogs/a-decade-at-google.org][A Decade at Google]]
- 201509 [[file:./blogs/a-love-for-legacy.org][A Love for Legacy]]
- 201509 [[file:./blogs/what-happens-to-older-developers.org][What Happens to Older Developers?]]
- 201509 [[file:./blogs/tips-for-work-life-balance.org][Tips for work-life balance]]

*books*
- [[file:design-reading.org][Design Reading]] 软件设计方面的一些文章
- [[file:license.org][Open Source License]] 一些常见的开源协议
- [[file:design-pattern.org][Design Pattern]] 将书<Design Patterns: Elements of Reusable Object-Oriented Software>中要表达的思想按照自己的意思整理出来(后面可能会添加一些自己的"设计模式"吧:)。不过我倒是觉得没有必要在使用中刻意地去拼凑使用某种模式，相反应该让模式渗入到自己的思想中去，指导自己写出更加优美更加可维护的代码，而不用在意"我使用了哪种模式". 然后现在我开始逐渐认同一个观点，那就是"设计模式是语言表达能力存在缺陷的一种表现".
- [[file:./competitive-strategy.org][竞争策略 on Coursera]]
- [[file:./financial-markets-class.org][金融市场 on Coursera]]
- [[file:./aosa.org][The Architecture of Open Source Applications]]
- [[http://berb.github.io/diploma-thesis/community/index.html][Concurrent Programming for Scalable Web Architectures]]
- [[http://producingoss.com/][Producing Open Source Software]]
- [[file:./blogs/the-cathedral-and-the-bazaar.org][大教堂与市集(The Cathedral and the Bazaar)]] by Eric Raymond
- [[file:./blogs/hackers-and-painters.org][黑客与画家(Hackers and Painters)]] by Paul Graham
- [[file:./blogs/writing-clean-code.org][编程精粹-Microsoft编写优质无错代码的秘诀(Writing Clean Code)]]
- [[file:./blogs/the-art-of-unix-programming.org][Unix程序设计艺术(The Art of Unix Programming)]] by Eric Raymond
- [[file:./blogs/the-mythical-man-month.org][人月神话(The Mythical Man-Month)]] by Fred Brooks
- [[file:./blogs/the-pragmatic-programmer.org][程序员修炼之道(The Pragmatic Programmer)]] by Andrew Hunt
- [[file:./blogs/dreaming-in-code.org][梦断代码(Dreaming in Code)]]
- [[file:./blogs/refactoring-improving-the-design-of-existing-code.org][重构-改善既有代码的设计(Refactoring: Improving the Design of Existing Code)]]
- [[file:./blogs/code-quality-the-open-source-perspective.org][高质量程序设计艺术(Code Quality The Open Source Perspective)]]
- [[file:./blogs/virtual-machine-design-and-implementation-in-c-cpp.org][虚拟机设计与实现(Virtual Machine Design and Implementation in C/C++)]]
- [[file:./blogs/structured-computer-organization.org][结构化计算机组成(Strcutured Computer Organization)]] by A.S.T
- [[file:./blogs/modern-operating-systems.org][现代操作系统(Modern Operating Systems)]] by A.S.T
- [[file:./blogs/introduction-to-computing-systems.org][计算机系统概论(Introduction to Computing Systems)]] by Yale Patt
- [[file:./blogs/distributed-operating-systems.org][分布式操作系统(Distributed Operating Systems)]] by A.S.T
- [[file:./blogs/on-top-of-tides.org][浪潮之巅(On Top of Tides)]] by 吴军
- [[file:./blogs/venture-captial.org][风险投资(Venture Captial)]] 摘自 <浪潮之巅>
- [[file:./blogs/rework.org][Rework]] by 37 Signals
- [[file:./blogs/pragmatic-thinking-and-learning.org][程序员的思维修炼(Pragmatic Thinking and Learning - Refactor Your Wetware)]]
- [[file:./blogs/getting-real.org][Getting Real]] by 37 Signals
- [[file:./blogs/nine-algos-that-changed-the-future.org][改变未来的九大算法(Nine Algorithms that Changed the Future)]] by John. McCormick

** Misc Books
- [[file:./links.org][Great links]]
- [[file:./blogs/steve-jobs.org][史蒂夫乔布斯传(Steve Jobs)]]
- [[file:./blogs/the-cathedral-and-the-bazaar.org][大教堂与市集(The Cathedral and the Bazaar)]] by Eric Raymond
- [[file:./blogs/hackers-and-painters.org][黑客与画家(Hackers and Painters)]] by Paul Graham
- [[file:./blogs/writing-clean-code.org][编程精粹-Microsoft编写优质无错代码的秘诀(Writing Clean Code)]]
- [[file:./blogs/the-art-of-unix-programming.org][Unix程序设计艺术(The Art of Unix Programming)]] by Eric Raymond
- [[file:./blogs/the-mythical-man-month.org][人月神话(The Mythical Man-Month)]] by Fred Brooks
- [[file:./blogs/the-pragmatic-programmer.org][程序员修炼之道(The Pragmatic Programmer)]] by Andrew Hunt
- [[file:./blogs/dreaming-in-code.org][梦断代码(Dreaming in Code)]]
- [[file:./blogs/refactoring-improving-the-design-of-existing-code.org][重构-改善既有代码的设计(Refactoring: Improving the Design of Existing Code)]]
- [[file:./blogs/code-quality-the-open-source-perspective.org][高质量程序设计艺术(Code Quality The Open Source Perspective)]]
- [[file:./blogs/virtual-machine-design-and-implementation-in-c-cpp.org][虚拟机设计与实现(Virtual Machine Design and Implementation in C/C++)]]
- [[file:./blogs/structured-computer-organization.org][结构化计算机组成(Strcutured Computer Organization)]] by A.S.T
- [[file:./blogs/modern-operating-systems.org][现代操作系统(Modern Operating Systems)]] by A.S.T
- [[file:./blogs/introduction-to-computing-systems.org][计算机系统概论(Introduction to Computing Systems)]] by Yale Patt
- [[file:./blogs/distributed-operating-systems.org][分布式操作系统(Distributed Operating Systems)]] by A.S.T
- [[file:./blogs/how-to-solve-it-a-new-apsect-of-math-method.org][如何解题-数学思维新方法(How to Solve It: A New Aspect of Mathematical Method)]] by George Polya
- [[file:./blogs/republic.org][理想国(Republic)]] by Plato
- 影响力(Influence) by Kerry Patterson
- 娱乐至死(Amusing Ourselves to Death) by Neil Postman
- 狂热分子(True Believer) by Eric Hoffer
- 乌合之众(The Crowd) by Gustave Le Bon
- [[file:./blogs/people-all-know.org][全世界人民都知道]] by 李承鹏
- [[file:./blogs/big-data.org][大数据时代：生活、工作与思维的大变革(Big Data:A Revolution That Will Transform How We Live, Work, and Think)]]
- [[file:./blogs/the-catcher-in-the-rye.org][麦田里的守望者(The Catcher in The Rye)]] by Jerome Salinger
- [[file:./blogs/jonathon-ive.org][乔纳森传(Jonathon Ive)]]
- [[file:./blogs/the-facebook-effect.org][Facebook效应(The Facebook Effect)]]
- [[file:./blogs/the-little-prince.org][小王子(The Little Prince)]] by Antoine de Saint-Exupéry
- [[file:./blogs/on-top-of-tides.org][浪潮之巅(On Top of Tides)]] by 吴军
- [[file:./blogs/the-economic-naturalist.org][牛奶可乐经济学(The Economic Naturalist)]]
- [[file:./blogs/venture-captial.org][风险投资(Venture Captial)]] 摘自 <浪潮之巅>
- [[file:./blogs/baked-in-creating-products-and-business-that-market-themselves.org][自营销(Baked In: Creating Products and Businesses That Market Themselves)]]
- [[file:./blogs/dear-andreas.org][亲爱的安德烈]] by 龙应台
- [[file:./blogs/rework.org][Rework]] by 37 Signals
- [[file:./blogs/pragmatic-thinking-and-learning.org][程序员的思维修炼(Pragmatic Thinking and Learning - Refactor Your Wetware)]]
- [[file:./blogs/getting-real.org][Getting Real]] by 37 Signals
- [[file:./blogs/think-like-an-artist.org][像艺术家一样思考-藏在名画里的创意思维(Think Like An Artist)]]
- [[file:./blogs/confessions-of-an-advertising-man.org][一个广告人的自白(Confessions of an Advertising Man)]]
- [[file:./blogs/remote.org][Remote]] by 37 Signals
- [[file:./blogs/inside-job.org][监守自盗(Inside Job)]]
- [[file:./blogs/god-father.org][教父(God Father)]] by Francis Coppola
- [[file:./blogs/seediq-bale.org][赛德克巴莱(Seediq Bale)]] by 魏德圣
- [[file:./blogs/scent-of-a-woman.org][闻香识女人(Scent of a Woman)]]
- [[file:./blogs/pulp-fiction.org][低俗小说(Pulp Fiction)]] by Quentin Tarantino
- [[file:./blogs/the-hurt-locker.org][拆弹部队(The Hurt Locker)]]
- [[file:./blogs/lincoln.org][林肯(Lincoln)(2012)]] by Steven Spielberg
- [[file:./blogs/the-prestige.org][致命魔术(The Prestige)]] by Chris Nolan
- [[file:./blogs/moneyball.org][点球成金(Moneyball)]]
- [[file:./blogs/animal-farm.org][动物庄园(Animal Farm)]] by George Orwell
- [[file:./blogs/stairway-to-heaven.org][Stairway to Heaven]] by Led Zeppelin
- [[file:./blogs/dont-go-gentle-into-that-good-night.org][Do not go gentle into that good night]] by Dylan Thomas
- [[file:./blogs/youtube-steve-chen-bio.org][YouTube创始人陈士骏自传]]
- [[file:./blogs/1984.org][1984]] by George Orwell
- [[file:./blogs/civilizations-and-enlightenments.org][文明之光]] by wujun
- [[file:./blogs/why-cn-people-anxious.org][中国人的焦虑从哪里来]] by 茅于轼
- [[file:./blogs/wu-qing-yuan-bio.org][中的精神（吴清源自传）]]
- [[file:./blogs/star-wars.org][星球大战(Star Wars)]]
- [[file:./blogs/baby-sleep-training.org][有关宝宝睡眠的那些事儿(睡眠训练实战操作经验)]]
- [[file:./blogs/antifragile.org][反脆弱: 从不确定性中获益(Antifragile: Things That Gain from Disorder)]] by Nassim Nicholas Taleb
- [[file:./blogs/money-doggy.org][小狗钱钱]] by Bodo Schafer
- [[file:./blogs/the-signal-and-the-noise.org][信号与噪声: 大数据时代预测的科学与艺术(The Signal and the Noise: Why Most Predictions Fail but Some Don't)]] by Nate Silver
- [[file:./blogs/anti-destruction-in-china.org][李可乐抗拆记]] by 李承鹏
- [[file:./blogs/dark-time.org][暗时间]] by 刘未鹏
- [[file:./blogs/wolf-totem.org][狼图腾]] by 姜戎
- [[file:./blogs/sears-the-baby-book.org][西尔斯育儿经]] by 威廉·西尔斯;玛莎·西尔斯
- [[file:./blogs/platform-strategy.org][平台战略: 正在席卷全球的商业模式革命]] by 陈威如, 余卓轩
- [[file:./blogs/nine-algos-that-changed-the-future.org][改变未来的九大算法(Nine Algorithms that Changed the Future)]] by John. McCormick
- [[file:./blogs/the-men-who-built-america.org][谁建造了美国(The men who built America)]] by 网易公开课
- [[file:./blogs/that-man-looks-like-a-dog.org][(ZZ)那个人好像一条狗]] 周星驰 <大圣娶亲>
- [[file:./blogs/three-body.org][三体(Three Body)]] by 刘慈欣
- [[file:./blogs/growth-hacker.org][增长黑客(Growth Hacker)]] by 范冰
- [[file:./blogs/lean-in.org][向前一步(Lean In)]] by Sheryl Sandberg
- [[file:./blogs/the-hitchhikers-guide-to-the-galaxy.org][银河系漫游指南(The Hitchhiker's Guide to the Galaxy)]] by Douglas Adams
- [[file:./blogs/thinking-fast-and-slow.org][思考,快与慢(Thinking, Fast and Slow)]] by Daniel Kahneman
- [[file:./blogs/from-zero-to-one.org][从0到1(From Zero To One)]] by Peter Thiel
- [[file:./blogs/the-great-game.org][伟大的博弈: 华尔街金融帝国的崛起(The Great Game: The Emergence of Wall Street as a World Power)]] by John Gordon
- [[file:./blogs/delivering-happiness.org][奉上幸福(Devliering Happiness)]] by 谢家华
- [[file:./blogs/convict-conditioning.org][囚徒健身(Convict Conditioning)]] by Paul Wade
- [[file:./blogs/the-paypal-wars.org][支付战争(The PayPal Wars)]] by Eric Jackson
- [[file:./blogs/how-google-works.org][谷歌是如何运营的(How Google Works)]] by Eric Schmidt
- [[file:./blogs/reminiscences-of-stock-broker.org][股票作手回忆录(Reminiscences of stock broker)]] by Jesse Livermore
- [[file:./blogs/zhihu-daily-economy.org][知乎周刊-日常经济学]]
- [[file:./blogs/the-shortest-history-of-europe.org][极简欧洲史]] by John Hirst
- [[file:./blogs/majority-of-silent-people.org][沉默的大多数]] by 王小波
- [[file:./blogs/mac-talk.org][MacTalk]] by 池建强
- [[file:./blogs/zhihu-hft-engineer.org][我是高频交易工程师：知乎董可人自选集]]
